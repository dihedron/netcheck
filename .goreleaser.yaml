# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 1

project_name: netcheck

before:
  hooks:
    - go mod tidy
    - go generate ./...

builds:
  - id: netcheck
    binary: netcheck
    main: .
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    goamd64:
      - v2
      - v3
    tags:
      - osusergo
      - netgo
      - static_build
    ldflags:
      - -s -w -X "github.com/dihedron/netcheck/metadata.Name=netcheck" -X "github.com/dihedron/netcheck/metadata.Description=Simple probe to check network connectivity." -X "github.com/dihedron/netcheck/metadata.Copyright=2025 © Andrea Funtò" -X "github.com/dihedron/netcheck/metadata.License=MIT" -X "github.com/dihedron/netcheck/metadata.LicenseURL=https://opensource.org/license/mit/" -X "github.com/dihedron/netcheck/metadata.VersionMajor=1" -X "github.com/dihedron/netcheck/metadata.VersionMinor=2" -X "github.com/dihedron/netcheck/metadata.VersionPatch=2" -X "github.com/dihedron/netcheck/metadata.Vendor=dihedron.dev@gmail.com" -X "github.com/dihedron/netcheck/metadata.Maintainer=dihedron.dev@gmail.com" -X "github.com/dihedron/netcheck/metadata.DotEnvVarName=NETCHECK_DOTENV" -X "github.com/dihedron/netcheck/metadata.BuildTime={{.Date}}" -X "github.com/dihedron/netcheck/metadata.GitTag={{.Tag}}" -X "github.com/dihedron/netcheck/metadata.GitCommit={{.Commit}}" -X "github.com/dihedron/netcheck/metadata.GitTime={{.CommitDate}}"
    mod_timestamp: '{{ .CommitTimestamp }}'

archives:
  - id: netcheck
    format: tar.gz
    name_template: >-
      {{ .ProjectName }}_
      {{- .Version }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
      {{- if .Amd64 }}v{{ .Amd64 }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip

nfpms:
  - id: netcheck
    package_name: netcheck
    homepage: "https://github.com/dihedron"
    maintainer: "Andrea Funtò <dihedron.dev@gmail.com>"
    description: |
      Netcheck is a simple network connectivity
      checking utility; it can test if the current
      host can reach other endpoints via TCP, UDP,
      TLS, SSH, ICMP; when probing a TLS endpoint,
      it also checks if the server certificate is
      valid and not expired.
    vendor: "Andrea Funtò"
    license: "MIT"
    formats:
      - rpm
      - deb
    builds:
      - netcheck
    contents:
      - src: ./netcheck.conf
        dst: /etc/netcheck.conf
        type: config
    scripts:
      postinstall: ./postinstall.sh
    epoch: 1
    release: 1
    section: default
    priority: "optional"

# MSI packaging is a GoReleaser Pro feature.
# If you have GoReleaser Pro, you can uncomment the following section.
# packagers:
#   - id: netcheck-msi
#     name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
#     builds:
#       - netcheck
#     extra_files:
#       - src: ./netcheck.conf
#     upgrade_code: "53c6e944-a35a-4e67-b3b9-8c9e7a8a0a3a"
#     msi:
#       component_id: Netcheck
#       directory_id: Netcheck

source:
  enabled: true
  name_template: "{{ .ProjectName }}_{{ .Version }}_source.tar.gz"

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

release:
  footer: |
    ---
    Released by [GoReleaser](https://github.com/goreleaser/goreleaser).
